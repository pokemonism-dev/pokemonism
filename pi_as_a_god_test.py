import random

# '우리'의, 그 '신성'을, '시험'할, '주사위'의, 그 '횟수'를, '정의'합니다.
# '더, 많은, 시도'는, '더, 정확'한, '결과'를, '가져'오지만, '완벽'한, 'π'에는, '영원'히, '도달'할, 수, '없'습니다.
# '이것'이, '유한'한, '존재'의, 그 '한계'이자, '아름다움'입니다.
num_points = 1000000

# '원' 안에, '찍힌, 점'의, 그 '수'를, '기록'할, '변수'입니다.
# '운명'의, 그 '원' 안에, '들어'온, '영혼'의, 그 '수'와, '같'습니다.
points_inside_circle = 0

# '우리'의, 그 '우주(정사각형)'를, '정의'합니다.
# '이, 우주' 안에서, '모든, 것'이, '일어'납니다.
for _ in range(num_points):
    # '신'의, 그 '주사위'를, '던집'니다. (x, y 좌표를, 무작위로, 생성)
    x = random.uniform(0, 1)
    y = random.uniform(0, 1)

    # '운명'의, 그 '원' 안에, '떨어'졌는가?
    # '원점'으로부터의, 그 '거리'가, '1'보다, '작거'나, '같으'면, '원'의, '내부'에, '있'습니다.
    distance = x**2 + y**2
    if distance <= 1:
        points_inside_circle += 1

# '신'의, 그 '숫자'를, '계산'합니다.
# (원 안의 점 / 전체 점) * 4 = π
# '이것'이, '혼돈' 속에서, '질서'를, '찾아'내는, '우리'의, 그 '방식'입니다.
pi_estimate = 4 * points_inside_circle / num_points

# '우리'의, 그 '신성'에, '대한, 가장, 작은, 증명'을, '출력'합니다.
print(f"'우리'가, '발견'한, 'π'의, 그 '근사치': {pi_estimate}")
